[
    {
        "id": "https://github.com/Str3am786/soca_Miguel_Arroyo_TFG",
        "html_card": "<article class=soca-card id=https://github.com/Str3am786/soca_Miguel_Arroyo_TFG><div class=card-row><div class=card-col><div class=flex-horizontal><a href=https://github.com/Str3am786/soca_Miguel_Arroyo_TFG target=_blank style=\"text-decoration: none;\"><h4 class=title>soca_Miguel_Arroyo_TFG</h4></a><button class=copy-btn value=https://github.com/Str3am786/soca_Miguel_Arroyo_TFG style=\"background:url('repo_icons/copy.svg')transparent;background-repeat:no-repeat;background-size:auto;\" data-toggle=tooltip data-placement=right title=\"Copy card as embbeded HTML\"></button></div><div class=description><span><p>Software Catalog Creator. A repository that given an organization URL, it will create a software catalog for browsing all repositories</p></span><div class=modal><div class=modal-content><span class=close>&times;</span><span style=display:flex;><h2 style=\"margin-bottom: 1rem;\">soca_Miguel_Arroyo_TFG</h2></span><div style=\"margin-bottom: 1rem; overflow: auto;\"><p><span><p>Software Catalog Creator. A repository that given an organization URL, it will create a software catalog for browsing all repositories</p></p></span></div></div></div></div></div><div><div style=\"min-height: 6rem;display: flex;align-items: center;justify-content: center;\"><a href=https://github.com/Str3am786/soca_Miguel_Arroyo_TFG target=_blank style=\"text-decoration: none;\"><img src=https://raw.githubusercontent.com/Str3am786/soca_Miguel_Arroyo_TFG/master/doc/images/soca-logo.png alt=repo-logo class=repo-logo></a></div><div class=\"flex-horizontal float-right\"><div class=recently-updated style=\"background-color: #6da862;\" data-toggle=tooltip data-placement=right title=\"Last updated on: 04-10-2022\"></div></div><div class=\"flex-horizontal float-right\" style=\"margin-top: 0.3rem;\" data-toggle=tooltip data-placement=right title=Stars alt=Stars><a href=https://github.com/Str3am786/soca_Miguel_Arroyo_TFG/stargazers target=_blank class=\"flex-horizontal float-right\" style=\"text-decoration: none;\"><b>0</b><img src=repo_icons/star.png alt=stars class=repo-icon></a></div><div data-toggle=tooltip data-placement=right title=\"No releases yet\" alt=\"No releases yet\" class=\"flex-horizontal float-right\"><a href=https://github.com/Str3am786/soca_Miguel_Arroyo_TFG/releases target=_blank class=flex-horizontal style=\"text-decoration: none;\"><b>0</b><img src=repo_icons/releases.png alt=releases class=repo-icon></a></div></div></div><div class=card-row><div class=card-col><div class=\"flex-horizontal ref-repo-icons\"><div class=icon-wrapper><div class=icon><a href=https://raw.githubusercontent.com/Str3am786/soca_Miguel_Arroyo_TFG/main/README.md target=_blank class=repo-icon><img src=repo_icons/readme.png class=repo-icon data-toggle=tooltip data-placement=bottom title=Readme alt=Readme></a></div></div><div data-url=https://api.github.com/licenses/apache-2.0 class=\"icon-wrapper ref-license\"><div class=icon><img src=repo_icons/license.png class=repo-icon data-toggle=tooltip data-placement=bottom title=\"License: Apache License 2.0\" alt=\"License: Apache License 2.0\"></div><div class=modal><div class=modal-content><span class=close>&times;</span><span style=display:flex;><h2 style=\"margin-bottom: 1rem;\">License</h2></span><div style=\"margin-bottom: 1rem; overflow: auto;\"><h3 class=ref-name></h3><span class=ref-description-aux><h4>Description:</h4><p class=ref-description style=\"text-align: justify;\">Loading...</p><h4>Permissions:</h4><div class=ref-permissions><ul><li>Loading...</li></ul></div><h4>Conditions:</h4><div class=ref-conditions><ul><li>Loading...</li></ul></div><h4>Limitations:</h4><div class=ref-limitations><ul><li>Loading...</li></ul></div></span></div></div></div></div><div class=icon-wrapper><div class=icon><img src=repo_icons/status.png class=repo-icon data-toggle=tooltip data-placement=bottom title=Status alt=Status></div><div class=modal><div class=modal-content><span class=close>&times;</span><span style=display:flex;><h2 style=\"margin-bottom: 1rem;\">Status</h2></span><div style=\"margin-bottom: 1rem; overflow: auto;\"><h3>Description</h3><p>Active: The project has reached a stable, usable state and is being actively developed.</p><h4>More information</h4><p><a href=https://www.repostatus.org/#active:>https://www.repostatus.org/#active:</a></p></div></div></div></div><div class=icon-wrapper><div class=icon><img src=repo_icons/installation.png class=repo-icon data-toggle=tooltip data-placement=bottom title=Installation alt=Installation></div><div class=modal><div class=modal-content><span class=close>&times;</span><span style=display:flex;><h2 style=\"margin-bottom: 1rem;\">Installation</h2></span><div style=\"margin-bottom: 1rem; overflow: auto;\"><pre><code class=language-text>git clone https://github.com/dakixr/soca\ncd soca\npip install -e .\n</code></pre><p>Highly recommended step:</p><pre><code class=language-text>somef configure\n</code></pre><p>And you will be asked to provide the following:</p><ul><li><p>A GitHub authentication token [<strong>optional, leave blank if not used</strong>], which SOMEF uses to retrieve metadata from GitHub. If you don't include an authentication token, you can still use SOMEF. However, you may be limited to a series of requests per hour. For more information, see <a href=https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line>https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line</a></p></li><li><p>The path to the trained classifiers (pickle files). If you have your own classifiers, you can provide them here. Otherwise, you can leave it blank</p></li></ul></div></div></div></div><div class=icon-wrapper><div class=icon><img src=repo_icons/requirements.png class=repo-icon data-toggle=tooltip data-placement=bottom title=Requirements alt=Requirements></div><div class=modal><div class=modal-content><span class=close>&times;</span><span style=display:flex;><h2 style=\"margin-bottom: 1rem;\">Requirements</h2></span><div style=\"margin-bottom: 1rem; overflow: auto;\"><ul><li>Git</li><li>Python 3.9</li></ul></div></div></div></div><div class=icon-wrapper><div class=icon><img src=repo_icons/usage.png class=repo-icon data-toggle=tooltip data-placement=bottom title=Usage alt=Usage></div><div class=modal><div class=modal-content><span class=close>&times;</span><span style=display:flex;><h2 style=\"margin-bottom: 1rem;\">Usage</h2></span><div style=\"margin-bottom: 1rem; overflow: auto;\"><pre><code class=language-text>Usage: soca [OPTIONS] COMMAND [ARGS]...\n\n  SOCA (Software Catalog Creator)\n\n  Automatically generates a searchable portal for every repository of an\n  organization/s or user/s, which is easy to host.\n\n  Usage:\n\n  1. (fetch) Fetch all repos from the desired organization/s\n  2. (extract) Extract all metadata for every repo\n  3. (portal) Generate a searchable portal for all the retrieved data\n\nOptions:\n  -h, --help  Show this message and exit.\n\nCommands:\n  card     Create a stand-alone card ready to be embedded in a website\n  extract  Fetch and save metadata from introduced repos\n  portal   Build a portal with a minimalist design\n  fetch    Retrieve all organization/s or user/s repositories\n</code></pre><p>In order to use SOCA you will need to follow the next steps:</p><p>First thing to do is gather all repositories pointers that we want to use. We'll use the <code>fetch</code> command to ease this task.</p><pre><code class=language-text>  -i, --input &lt;name-or-path&gt;  Organization or user name  [required]\n  -o, --output &lt;path&gt;         Output csv file  [default: repos.csv]\n  --org                       Extracting from a organization  [default: True]\n  --user                      Extracting from a user  [default: False]\n  -na, --not_archived         Fetch only repos that are not archived\n                              [default: False]\n  -nf, --not_forked           Fetch only repos that are not forked  [default:\n                              False]\n  -nd, --not_disabled         Fetch only repos that are not disabled\n                              [default: False]\n  -h, --help                  Show this message and exit.\n</code></pre><p>Is important to determine if the name belongs to a user or a organization by using the --user or --org flag, additionally you can specify an output path with the flag -o.</p><p>Example:</p><p><code>soca fetch -i dakixr --user</code><br><code>soca fetch -i oeg-upm --org -o oeg-upm_repos.csv --not_archived</code></p><p>This command also accepts a file as input (names separated by a new-line) for ingesting multiple names at a time.</p><p>Example:<br><code>soca fetch -i multiple-users.csv --user -o multiple-users_repos.csv</code><br><code>soca fetch -i multiple-orgs.csv --org -o multiple-orgs_repos.csv --not_archived</code></p><p>The output of this command is a csv file with all the repos of the selected users/orgs. At this moment is a good time to clean this file (remove all repos that you don't want to use). Note: you can add manually any other repository.</p><p>Then we use the <code>extract</code> command to extract all the metadata required from each repository. If you want a more in-depth analysis on Python repositories use the flag -i4p or --inspect4py.</p><pre><code class=language-text>  -i, --input &lt;csv-repos&gt;  Pointers to the repositories in csv format\n                           [required]\n  -o, --output &lt;path&gt;      Dir where repositories metadata will be saved\n  -i4p, --inspect4py       Use inspect4py to extract additional metadata from\n                           Python repositories\n  -h, --help               Show this message and exit.\n</code></pre><p>Example:<br><code>soca extract -i oeg-upm_repos.csv -o oeg-upm_metadata</code></p><p>This is the last step in the pipeline. For building the portal we need to use the command <code>portal</code>, it will take as input the directory created by the command extract.</p><pre><code class=language-text>  -i, --input &lt;dir-json-metadata&gt;\n                                  Dir repositories metadata in json format\n                                  [required]\n  -o, --output &lt;path&gt;             Dir where Software Catalog Portal will be\n                                  saved  [default: portal]\n  -t, --title &lt;title&gt;             Portal's title  [default: Software Catalog]\n  -fi, --favicon &lt;path-icon.ico&gt;  Portal's favicon  [default: img/soca-\n                                  logo.ico]\n  -h, --help                      Show this message and exit.\n</code></pre><p>Example:<br><code>soca portal -i oeg-upm_metadata -o dir_portal --title '[Portal's title]'</code></p><p>If everything worked fine now a new dir should have been created with all the assets and code to deploy this portal.</p><p>SOCA also gives the option to create a single card in one of two different formats:</p><ul><li>HTML</li><li>PNG</li></ul><pre><code class=language-text>  -i, --input &lt;url&gt;    Repository URL  [required]\n  -o, --output &lt;path&gt;  Output file where the html will be saved  [default:\n                       card]\n  --html               Save card as html  [default: True]\n  --png                Save card as a png  [default: False]\n  -h, --help           Show this message and exit.\n</code></pre><p>As input you will need a github repository url and use one of the flags: --html or --png.<br> Note: if no flag is used the default is html.</p><p>Example:<br><code>soca card -i https://github.com/oeg-upm/soca --html</code><br><code>soca card -i https://github.com/oeg-upm/soca --png</code></p><p>In case you want to change the default style of the portal, SOCA decouples the .css files from the code-base. So in the resulting portal directory there will be two .css files are available for further tinkering and styling to everyone needs.</p></div></div></div></div></div></div><div><div class=\"flex-horizontal float-right\"><img src=language_icons/html.svg alt=html class=\"repo-icon grey-color-svg\" data-toggle=tooltip data-placement=bottom title=Html><img src=language_icons/javascript.svg alt=javascript class=\"repo-icon grey-color-svg\" data-toggle=tooltip data-placement=bottom title=Javascript><img src=language_icons/python.svg alt=python class=\"repo-icon grey-color-svg\" data-toggle=tooltip data-placement=bottom title=Python><img src=language_icons/css.svg alt=css class=\"repo-icon grey-color-svg\" data-toggle=tooltip data-placement=bottom title=Css></div></div></div></article>",
        "html_card_embedded": "<article class=soca-card id=https://github.com/Str3am786/soca_Miguel_Arroyo_TFG><div class=card-row><div class=card-col><div class=flex-horizontal><a href=https://github.com/Str3am786/soca_Miguel_Arroyo_TFG target=_blank style=\"text-decoration: none;\"><h4 class=title>soca_Miguel_Arroyo_TFG</h4></a><button class=copy-btn value=https://github.com/Str3am786/soca_Miguel_Arroyo_TFG style=\"background:url('https://github.com/dakixr/soca/raw/main/src/soca/assets/repo_icons/copy.svg')transparent;background-repeat:no-repeat;background-size:auto;\" data-toggle=tooltip data-placement=right title=\"Copy card as embbeded HTML\"></button></div><div class=description><span><p>Software Catalog Creator. A repository that given an organization URL, it will create a software catalog for browsing all repositories</p></span><div class=modal><div class=modal-content><span class=close>&times;</span><span style=display:flex;><h2 style=\"margin-bottom: 1rem;\">soca_Miguel_Arroyo_TFG</h2></span><div style=\"margin-bottom: 1rem; overflow: auto;\"><p><span><p>Software Catalog Creator. A repository that given an organization URL, it will create a software catalog for browsing all repositories</p></p></span></div></div></div></div></div><div><div style=\"min-height: 6rem;display: flex;align-items: center;justify-content: center;\"><a href=https://github.com/Str3am786/soca_Miguel_Arroyo_TFG target=_blank style=\"text-decoration: none;\"><img src=https://raw.githubusercontent.com/Str3am786/soca_Miguel_Arroyo_TFG/master/doc/images/soca-logo.png alt=repo-logo class=repo-logo></a></div><div class=\"flex-horizontal float-right\"><div class=recently-updated style=\"background-color: #6da862;\" data-toggle=tooltip data-placement=right title=\"Last updated on: 04-10-2022\"></div></div><div class=\"flex-horizontal float-right\" style=\"margin-top: 0.3rem;\" data-toggle=tooltip data-placement=right title=Stars alt=Stars><a href=https://github.com/Str3am786/soca_Miguel_Arroyo_TFG/stargazers target=_blank class=\"flex-horizontal float-right\" style=\"text-decoration: none;\"><b>0</b><img src=https://github.com/dakixr/soca/raw/main/src/soca/assets/repo_icons/star.png alt=stars class=repo-icon></a></div><div data-toggle=tooltip data-placement=right title=\"No releases yet\" alt=\"No releases yet\" class=\"flex-horizontal float-right\"><a href=https://github.com/Str3am786/soca_Miguel_Arroyo_TFG/releases target=_blank class=flex-horizontal style=\"text-decoration: none;\"><b>0</b><img src=https://github.com/dakixr/soca/raw/main/src/soca/assets/repo_icons/releases.png alt=releases class=repo-icon></a></div></div></div><div class=card-row><div class=card-col><div class=\"flex-horizontal ref-repo-icons\"><div class=icon-wrapper><div class=icon><a href=https://raw.githubusercontent.com/Str3am786/soca_Miguel_Arroyo_TFG/main/README.md target=_blank class=repo-icon><img src=https://github.com/dakixr/soca/raw/main/src/soca/assets/repo_icons/readme.png class=repo-icon data-toggle=tooltip data-placement=bottom title=Readme alt=Readme></a></div></div><div data-url=https://api.github.com/licenses/apache-2.0 class=\"icon-wrapper ref-license\"><div class=icon><img src=https://github.com/dakixr/soca/raw/main/src/soca/assets/repo_icons/license.png class=repo-icon data-toggle=tooltip data-placement=bottom title=\"License: Apache License 2.0\" alt=\"License: Apache License 2.0\"></div><div class=modal><div class=modal-content><span class=close>&times;</span><span style=display:flex;><h2 style=\"margin-bottom: 1rem;\">License</h2></span><div style=\"margin-bottom: 1rem; overflow: auto;\"><h3 class=ref-name></h3><span class=ref-description-aux><h4>Description:</h4><p class=ref-description style=\"text-align: justify;\">Loading...</p><h4>Permissions:</h4><div class=ref-permissions><ul><li>Loading...</li></ul></div><h4>Conditions:</h4><div class=ref-conditions><ul><li>Loading...</li></ul></div><h4>Limitations:</h4><div class=ref-limitations><ul><li>Loading...</li></ul></div></span></div></div></div></div><div class=icon-wrapper><div class=icon><img src=https://github.com/dakixr/soca/raw/main/src/soca/assets/repo_icons/status.png class=repo-icon data-toggle=tooltip data-placement=bottom title=Status alt=Status></div><div class=modal><div class=modal-content><span class=close>&times;</span><span style=display:flex;><h2 style=\"margin-bottom: 1rem;\">Status</h2></span><div style=\"margin-bottom: 1rem; overflow: auto;\"><h3>Description</h3><p>Active: The project has reached a stable, usable state and is being actively developed.</p><h4>More information</h4><p><a href=https://www.repostatus.org/#active:>https://www.repostatus.org/#active:</a></p></div></div></div></div><div class=icon-wrapper><div class=icon><img src=https://github.com/dakixr/soca/raw/main/src/soca/assets/repo_icons/installation.png class=repo-icon data-toggle=tooltip data-placement=bottom title=Installation alt=Installation></div><div class=modal><div class=modal-content><span class=close>&times;</span><span style=display:flex;><h2 style=\"margin-bottom: 1rem;\">Installation</h2></span><div style=\"margin-bottom: 1rem; overflow: auto;\"><pre><code class=language-text>git clone https://github.com/dakixr/soca\ncd soca\npip install -e .\n</code></pre><p>Highly recommended step:</p><pre><code class=language-text>somef configure\n</code></pre><p>And you will be asked to provide the following:</p><ul><li><p>A GitHub authentication token [<strong>optional, leave blank if not used</strong>], which SOMEF uses to retrieve metadata from GitHub. If you don't include an authentication token, you can still use SOMEF. However, you may be limited to a series of requests per hour. For more information, see <a href=https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line>https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line</a></p></li><li><p>The path to the trained classifiers (pickle files). If you have your own classifiers, you can provide them here. Otherwise, you can leave it blank</p></li></ul></div></div></div></div><div class=icon-wrapper><div class=icon><img src=https://github.com/dakixr/soca/raw/main/src/soca/assets/repo_icons/requirements.png class=repo-icon data-toggle=tooltip data-placement=bottom title=Requirements alt=Requirements></div><div class=modal><div class=modal-content><span class=close>&times;</span><span style=display:flex;><h2 style=\"margin-bottom: 1rem;\">Requirements</h2></span><div style=\"margin-bottom: 1rem; overflow: auto;\"><ul><li>Git</li><li>Python 3.9</li></ul></div></div></div></div><div class=icon-wrapper><div class=icon><img src=https://github.com/dakixr/soca/raw/main/src/soca/assets/repo_icons/usage.png class=repo-icon data-toggle=tooltip data-placement=bottom title=Usage alt=Usage></div><div class=modal><div class=modal-content><span class=close>&times;</span><span style=display:flex;><h2 style=\"margin-bottom: 1rem;\">Usage</h2></span><div style=\"margin-bottom: 1rem; overflow: auto;\"><pre><code class=language-text>Usage: soca [OPTIONS] COMMAND [ARGS]...\n\n  SOCA (Software Catalog Creator)\n\n  Automatically generates a searchable portal for every repository of an\n  organization/s or user/s, which is easy to host.\n\n  Usage:\n\n  1. (fetch) Fetch all repos from the desired organization/s\n  2. (extract) Extract all metadata for every repo\n  3. (portal) Generate a searchable portal for all the retrieved data\n\nOptions:\n  -h, --help  Show this message and exit.\n\nCommands:\n  card     Create a stand-alone card ready to be embedded in a website\n  extract  Fetch and save metadata from introduced repos\n  portal   Build a portal with a minimalist design\n  fetch    Retrieve all organization/s or user/s repositories\n</code></pre><p>In order to use SOCA you will need to follow the next steps:</p><p>First thing to do is gather all repositories pointers that we want to use. We'll use the <code>fetch</code> command to ease this task.</p><pre><code class=language-text>  -i, --input &lt;name-or-path&gt;  Organization or user name  [required]\n  -o, --output &lt;path&gt;         Output csv file  [default: repos.csv]\n  --org                       Extracting from a organization  [default: True]\n  --user                      Extracting from a user  [default: False]\n  -na, --not_archived         Fetch only repos that are not archived\n                              [default: False]\n  -nf, --not_forked           Fetch only repos that are not forked  [default:\n                              False]\n  -nd, --not_disabled         Fetch only repos that are not disabled\n                              [default: False]\n  -h, --help                  Show this message and exit.\n</code></pre><p>Is important to determine if the name belongs to a user or a organization by using the --user or --org flag, additionally you can specify an output path with the flag -o.</p><p>Example:</p><p><code>soca fetch -i dakixr --user</code><br><code>soca fetch -i oeg-upm --org -o oeg-upm_repos.csv --not_archived</code></p><p>This command also accepts a file as input (names separated by a new-line) for ingesting multiple names at a time.</p><p>Example:<br><code>soca fetch -i multiple-users.csv --user -o multiple-users_repos.csv</code><br><code>soca fetch -i multiple-orgs.csv --org -o multiple-orgs_repos.csv --not_archived</code></p><p>The output of this command is a csv file with all the repos of the selected users/orgs. At this moment is a good time to clean this file (remove all repos that you don't want to use). Note: you can add manually any other repository.</p><p>Then we use the <code>extract</code> command to extract all the metadata required from each repository. If you want a more in-depth analysis on Python repositories use the flag -i4p or --inspect4py.</p><pre><code class=language-text>  -i, --input &lt;csv-repos&gt;  Pointers to the repositories in csv format\n                           [required]\n  -o, --output &lt;path&gt;      Dir where repositories metadata will be saved\n  -i4p, --inspect4py       Use inspect4py to extract additional metadata from\n                           Python repositories\n  -h, --help               Show this message and exit.\n</code></pre><p>Example:<br><code>soca extract -i oeg-upm_repos.csv -o oeg-upm_metadata</code></p><p>This is the last step in the pipeline. For building the portal we need to use the command <code>portal</code>, it will take as input the directory created by the command extract.</p><pre><code class=language-text>  -i, --input &lt;dir-json-metadata&gt;\n                                  Dir repositories metadata in json format\n                                  [required]\n  -o, --output &lt;path&gt;             Dir where Software Catalog Portal will be\n                                  saved  [default: portal]\n  -t, --title &lt;title&gt;             Portal's title  [default: Software Catalog]\n  -fi, --favicon &lt;path-icon.ico&gt;  Portal's favicon  [default: img/soca-\n                                  logo.ico]\n  -h, --help                      Show this message and exit.\n</code></pre><p>Example:<br><code>soca portal -i oeg-upm_metadata -o dir_portal --title '[Portal's title]'</code></p><p>If everything worked fine now a new dir should have been created with all the assets and code to deploy this portal.</p><p>SOCA also gives the option to create a single card in one of two different formats:</p><ul><li>HTML</li><li>PNG</li></ul><pre><code class=language-text>  -i, --input &lt;url&gt;    Repository URL  [required]\n  -o, --output &lt;path&gt;  Output file where the html will be saved  [default:\n                       card]\n  --html               Save card as html  [default: True]\n  --png                Save card as a png  [default: False]\n  -h, --help           Show this message and exit.\n</code></pre><p>As input you will need a github repository url and use one of the flags: --html or --png.<br> Note: if no flag is used the default is html.</p><p>Example:<br><code>soca card -i https://github.com/oeg-upm/soca --html</code><br><code>soca card -i https://github.com/oeg-upm/soca --png</code></p><p>In case you want to change the default style of the portal, SOCA decouples the .css files from the code-base. So in the resulting portal directory there will be two .css files are available for further tinkering and styling to everyone needs.</p></div></div></div></div></div></div><div><div class=\"flex-horizontal float-right\"><img src=https://github.com/dakixr/soca/raw/main/src/soca/assets/language_icons/html.svg alt=html class=\"repo-icon grey-color-svg\" data-toggle=tooltip data-placement=bottom title=Html><img src=https://github.com/dakixr/soca/raw/main/src/soca/assets/language_icons/javascript.svg alt=javascript class=\"repo-icon grey-color-svg\" data-toggle=tooltip data-placement=bottom title=Javascript><img src=https://github.com/dakixr/soca/raw/main/src/soca/assets/language_icons/python.svg alt=python class=\"repo-icon grey-color-svg\" data-toggle=tooltip data-placement=bottom title=Python><img src=https://github.com/dakixr/soca/raw/main/src/soca/assets/language_icons/css.svg alt=css class=\"repo-icon grey-color-svg\" data-toggle=tooltip data-placement=bottom title=Css></div></div></div><script src=https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js></script><script src=https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js></script><script>\n$(document).ready(function(){\n    $('[data-toggle=\"tooltip\"]').tooltip();\n});\n</script><script>\nbtns = document.getElementsByClassName('copy-btn');\nfor (let index = 0; index < btns.length; index++) {\n    const element = btns[index];\n    element.addEventListener('click', function () {\n        console.log('copy btn!');\n        for (let index = 0; index < cards.length; index++) {\n            const card = cards[index];\n            if(card.id == $(this).val()){\n                navigator.clipboard.writeText(card.html_card_embedded);\n                break;\n            }\n        }\n    });\n}\n\nbtns = document.getElementsByClassName('copy-citation-btn');\nfor (let index = 0; index < btns.length; index++) {\n    const element = btns[index];\n    element.addEventListener('click', function () {\n        console.log('copy citation btn!');\n        for (let index = 0; index < cards.length; index++) {\n            const card = cards[index];\n            if(card.id == $(this).val()){\n                navigator.clipboard.writeText(card.citationText);\n                break;\n            }\n        }\n    });\n}</script><script>function add_modals() {\n    cards_icons_list = document.getElementsByClassName('ref-repo-icons');\n    for(const cards_icons of cards_icons_list){\n        for(const card_icon of cards_icons.children){\n            const icon = card_icon.getElementsByClassName('icon')[0];\n            const modal = card_icon.getElementsByClassName('modal')[0];\n            const modal_content = card_icon.getElementsByClassName('modal-content')[0];\n            const span_close = card_icon.getElementsByClassName('close')[0];\n            \n            if (modal != undefined){\n                icon.addEventListener('click', () => { \n                    modal.classList.add('modal-on');\n                });\n                span_close.addEventListener('click', () => { \n                    modal.classList.remove('modal-on');\n                });\n                modal_content.addEventListener('click', (event) => { \n                    event.stopPropagation();\n                });\n                modal.addEventListener('click', () => { \n                    modal.classList.remove('modal-on');\n\n                });\n            }\n        }\n        \n        const license = cards_icons.getElementsByClassName('ref-license')[0];\n        if (license != undefined) {\n            license.addEventListener('click', () => { \n                getGithub(license);\n            });\n        }\n        \n    }\n    const descriptions = document.getElementsByClassName('description');\n    [].forEach.call(descriptions, function (description) {\n        if (isOverflown(description)) {\n            description.style.cursor=\"pointer\";\n            const modal = description.getElementsByClassName('modal')[0];\n            const modal_content = description.getElementsByClassName('modal-content')[0];\n            const span_close = description.getElementsByClassName('close')[0];\n            if (modal != undefined){\n                description.addEventListener('click', () => { \n                    modal.classList.add('modal-on');\n                });\n                span_close.addEventListener('click', () => { \n                    modal.classList.remove('modal-on');\n                });\n                modal_content.addEventListener('click', (event) => { \n                    event.stopPropagation();\n                });\n                modal.addEventListener('click', (event) => { \n                    modal.classList.remove('modal-on');\n                    event.stopPropagation();\n                });\n            }\n        }\n    });\n    const ontologies = document.getElementsByClassName('m_ontology');\n    [].forEach.call(ontologies, function (ontology) {\n            const modal = ontology.getElementsByClassName('modal')[0];\n            const modal_content = ontology.getElementsByClassName('modal-content')[0];\n            const span_close = ontology.getElementsByClassName('close')[0];\n            if (modal != undefined){\n                ontology.addEventListener('click', () => { \n                    modal.classList.add('modal-on');\n                });\n                span_close.addEventListener('click', () => { \n                    modal.classList.remove('modal-on');\n                });\n                modal_content.addEventListener('click', (event) => { \n                    event.stopPropagation();\n                });\n                modal.addEventListener('click', (event) => { \n                    modal.classList.remove('modal-on');\n                    event.stopPropagation();\n                });\n            }\n    });\n    \n}\n\nfunction isOverflown(element) {\n    return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;\n}\n\nfunction addList(element, iterable){\n    var list = document.createElement(\"ol\");\n        for (let i of iterable) {\n            let item = document.createElement(\"li\");\n            item.innerHTML = i.charAt(0).toUpperCase() + i.slice(1);\n            list.appendChild(item);\n        }\n        element.innerHTML = '';\n        element.appendChild(list);\n}\n\nasync function getGithub(license){\n    if (license.dataset.url != 'None'){\n        const response = await fetch(license.dataset.url);\n        const response_aux = response.clone();\n        try {\n            const data =  await response.json();\n\n            const name = license.getElementsByClassName('ref-name')[0];\n            const description = license.getElementsByClassName('ref-description')[0];\n            const permissions = license.getElementsByClassName('ref-permissions')[0];\n            const conditions = license.getElementsByClassName('ref-conditions')[0];\n            const limitations = license.getElementsByClassName('ref-limitations')[0];\n\n            name.innerHTML = await data.name;\n            description.innerHTML = await data.description;\n\n            addList(permissions, data.permissions);\n            addList(conditions, data.conditions);\n            addList(limitations, data.limitations);\n\n        } catch (error) {\n            const description = license.getElementsByClassName('ref-description-aux')[0];\n            description.innerHTML = '<pre style=\"font-family: monospace;\">'+await response_aux.text()+'</pre>';\n        }\n    } else console.log('No license.');\n}add_modals();</script><style>.soca-card *{margin:0;box-sizing:border-box;color:#3e3e3e;font-family:Helvetica}\n.soca-card .copy-btn:active{position:relative;top:1px;background-color:#3e3e3e;color:#e0e0e0}\n.soca-card .copy-btn{margin-left: 0.3rem;border:none;height:1.1rem;width:1rem;cursor:pointer;}\n.soca-card .copy-citation-btn:active{position:relative;top:1px;background-color:#3e3e3e;color:#e0e0e0}\n.soca-card .copy-citation-btn{margin-left: 0.3rem;border:none;height:1.1rem;width:1rem;cursor:pointer;}\n.soca-card .tooltip{position:absolute;z-index:1070;display:block;font-style:normal;font-weight:400;line-height:1.42857143;line-break:auto;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;letter-spacing:normal;word-break:normal;word-spacing:normal;word-wrap:normal;white-space:normal;font-size:12px;opacity:0}\n.soca-card .tooltip.in{opacity:.9}\n.soca-card .tooltip.top{padding:5px 0;margin-top:-3px}\n.soca-card .tooltip.right{padding:0 5px;margin-left:3px}\n.soca-card .tooltip.bottom{padding:5px 0;margin-top:3px}\n.soca-card .tooltip.left{padding:0 5px;margin-left:-3px}\n.soca-card .tooltip.top .tooltip-arrow{bottom:0;left:50%;margin-left:-5px;border-width:5px 5px 0;border-top-color:#3e3e3e}\n.soca-card .tooltip.top-left .tooltip-arrow{right:5px;bottom:0;margin-bottom:-5px;border-width:5px 5px 0;border-top-color:#3e3e3e}\n.soca-card .tooltip.top-right .tooltip-arrow{bottom:0;left:5px;margin-bottom:-5px;border-width:5px 5px 0;border-top-color:#3e3e3e}\n.soca-card .tooltip.right .tooltip-arrow{top:50%;left:0;margin-top:-5px;border-width:5px 5px 5px 0;border-right-color:#3e3e3e}\n.soca-card .tooltip.left .tooltip-arrow{top:50%;right:0;margin-top:-5px;border-width:5px 0 5px 5px;border-left-color:#3e3e3e}\n.soca-card .tooltip.bottom .tooltip-arrow{top:0;left:50%;margin-left:-5px;border-width:0 5px 5px;border-bottom-color:#3e3e3e}\n.soca-card .tooltip.bottom-left .tooltip-arrow{top:0;right:5px;margin-top:-5px;border-width:0 5px 5px;border-bottom-color:#3e3e3e}\n.soca-card .tooltip.bottom-right .tooltip-arrow{top:0;left:5px;margin-top:-5px;border-width:0 5px 5px;border-bottom-color:#3e3e3e}\n.soca-card .tooltip-inner{max-width:200px;padding:3px 8px;color:#e0e0e0;text-align:center;background-color:#3e3e3e;border-radius:4px}\n.soca-card .tooltip-arrow{position:absolute;width:0;height:0;border-color:transparent;border-style:solid}\n.soca-card {display: flex; flex-direction: column; justify-content: space-between; line-height: 1.42857143; margin: 0.2rem; min-width: 28rem; max-width: 28rem; min-height: 15rem; max-height: 15rem; padding: 1.3rem; border-radius: 19px; background-color: #e0e0e0; box-shadow: inset 5px 5px 10px #bebebe, inset -5px -5px 10px #ffffff;}\n.soca-card .repo-logo{width: 5.5rem;}\n.soca-card .description{text-align: justify; overflow: hidden; text-overflow: ellipsis; display: -webkit-box; -webkit-line-clamp: 6; line-clamp: 6; -webkit-box-orient: vertical;}\n.soca-card .recently-updated{width: 1.4rem; height: 1.4rem; border-radius: 50%; margin-left: auto; margin-right: 0.1rem; background-color: #3e3e3e;}\n.soca-card .repo-icon{height: 1.1rem; margin-left: 0.2rem; margin-right: 0.2rem;}\n.soca-card .card-row{display: flex; flex-direction: row; justify-content: space-between;}\n.soca-card .card-col{width: 72%;}\n.soca-card .flex-horizontal{display: flex; align-items: center; flex-direction: row;}\n.soca-card .float-right{justify-content: flex-end;}\n.soca-card .grey-color-svg{filter: brightness(0) saturate(100%) invert(26%) sepia(0%) saturate(9%) hue-rotate(190deg) brightness(93%) contrast(100%);}\n.soca-card .title:hover{text-decoration: underline;}\n.soca-card .ref-repo-icons{flex-wrap: wrap;}\n.soca-card .icon-wrapper {cursor: pointer; width: 2rem; display: flex; align-items: center; justify-content: center;}\n.highlight *{font-family: monospace; font-size: large;}\n.modal {display: none;position: fixed;z-index: 1;padding-top: 20vh;left: 0;top: 0;width: 100%;height: 100%;overflow: auto;background-color: rgb(0,0,0);background-color: rgba(0,0,0,0.4);}\n.modal-content {background-color: #e0e0e0;margin: auto;padding: 20px;border: 0px;width: 90%;max-width: 40rem;border-radius: 1rem;}\n.modal-on{display: block;}\n.close {color: #3e3e3e;float: right;font-size: 28px;font-weight: bold;position: relative;bottom: 0.8rem;}\n.close:hover, .close:focus {  color: #000;  text-decoration: none; cursor: pointer;}\n.soca-card .repo-type{height: 1.4rem; margin-left: 0.2rem; margin-right: 0.2rem; cursor: pointer;}</style></article>",
        "name": "soca_Miguel_Arroyo_TFG",
        "recently_updated": 18,
        "stargazersCount": 0,
        "releases": 0,
        "languages": [
            "html",
            "javascript",
            "python",
            "css"
        ],
        "description": "Software Catalog Creator. A repository that given an organization URL, it will create a software catalog for browsing all repositories",
        "license": true,
        "licenseName": "Apache License 2.0",
        "readmeUrl": true,
        "hasExecutableNotebook": false,
        "citation": false,
        "citationText": null,
        "paper": false,
        "hasBuildFile": false,
        "installation": true,
        "requirement": true,
        "usage": true,
        "help": false,
        "hasDocumentation": false,
        "hasIdentifier": false,
        "identifierLink": null,
        "repoStatus": true,
        "acknowledgement": false,
        "downloadUrl": false,
        "isOntology": false,
        "isWeb": false,
        "owner": "Str3am786"
    }
]